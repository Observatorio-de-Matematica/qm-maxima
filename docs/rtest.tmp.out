Loading /home/ehm/.maxima/maxima-init.mac
(%i1) batch("examples.txt")

read and interpret /home/ehm/math/Maxima/share/ehm/qm-maxima/docs/examples.txt
(%i2) (display2d:false,load(qm),0)
(%o2) 0
(%i3) psi_bra:a*dagger(zp)+b*dagger(zm)
(%o3) matrix([a,b])
(%i4) ket([a,b])+ket([c,d])
(%o4) ket([c,d])+ket([a,b])
(%i5) mket([a,b])
(%o5) matrix([a],[b])
(%i6) mbra([a,b])
(%o6) matrix([a,b])
(%i7) bell:(1/sqrt(2))*(ket([u,d])-ket([d,u]))
(%o7) (ket([u,d])-ket([d,u]))/sqrt(2)
(%i8) dagger(bell)
(%o8) (bra([u,d])-bra([d,u]))/sqrt(2)
(%i9) braket(bra([a1,b1]),ket([a2,b2]))
(%o9) kron_delta(a1,a2)*kron_delta(b1,b2)
(%i10) declare([a,b],complex)
(%o10) done
(%i11) psi:a*ket([1])+b*ket([2])
(%o11) ket([2])*b+ket([1])*a
(%i12) psidag:dagger(psi)
(%o12) bra([2])*conjugate(b)+bra([1])*conjugate(a)
(%i13) psidag . psi
(%o13) b*conjugate(b)+a*conjugate(a)
(%i14) declare([c1,c2],complex,r,real)
(%o14) done
(%i15) k:mket([c1,c2,r])
(%o15) matrix([c1],[c2],[r])
(%i16) b:dagger(k)
(%o16) matrix([conjugate(c1),conjugate(c2),r])
(%i17) b . k
(%o17) r^2+c2*conjugate(c2)+c1*conjugate(c1)
(%i18) k:ket([u,d])
(%o18) ket([u,d])
(%i19) b:bra([u,d])
(%o19) bra([u,d])
(%i20) b . k
(%o20) 1
(%i21) k:ket([u,d])
(%o21) ket([u,d])
(%i22) b:bra([u,d])
(%o22) bra([u,d])
(%i23) b . k
(%o23) 1
(%i24) declare([c1,c2],complex)
(%o24) done
(%i25) mket([c1,c2])
(%o25) matrix([c1],[c2])
(%i26) facts()
(%o26) [kind(hbar,real),hbar > 0,kind(a,complex),kind(b,complex),
        kind(c1,complex),kind(c2,complex),kind(r,real)]
(%i27) k:ket([a,b])
(%o27) ket([a,bra([u,d])])
(%i28) mketp(k)
(%o28) false
(%i29) k:mket([a,b])
(%o29) matrix([a],[bra([u,d])])
(%i30) mketp(k)
(%o30) true
(%i31) kill(c1,c2)
(%o31) done
(%i32) mbra([c1,c2])
(%o32) matrix([c1,c2])
(%i33) facts()
(%o33) [kind(hbar,real),hbar > 0,kind(a,complex),kind(b,complex),kind(r,real)]
(%i34) b:mbra([a,b])
(%o34) matrix([a,bra([u,d])])
(%i35) mbrap(b)
(%o35) true
(%i36) autoket([a,b])
(%o36) matrix([a],[matrix([a,bra([u,d])])])
(%i37) facts()
(%o37) [kind(hbar,real),hbar > 0,kind(a,complex),kind(b,complex),kind(r,real)]
(%i38) autoket([a*sin(x),b*sin(x)])
(%o38) matrix([a*sin(x)],[matrix([a*sin(x),bra([u,d])*sin(x)])])
(%i39) facts()
(%o39) [kind(hbar,real),hbar > 0,kind(a,complex),kind(b,complex),kind(r,real)]
(%i40) autobra([a,b])
(%o40) matrix([a,matrix([a,bra([u,d])])])
(%i41) facts()
(%o41) [kind(hbar,real),hbar > 0,kind(a,complex),kind(b,complex),kind(r,real)]
(%i42) autobra([a*sin(x),b])
(%o42) matrix([a*sin(x),matrix([a,bra([u,d])])])
(%i43) facts()
(%o43) [kind(hbar,real),hbar > 0,kind(a,complex),kind(b,complex),kind(r,real)]
(%i44) dagger(mbra([%i,2]))
(%o44) matrix([-%i],[2])
(%i45) declare([a,b,c],complex)
(%o45) done
(%i46) braket(mket([a,b,c]),mket([a,b,c]))
(%o46) braket(matrix([a],[matrix([a,bra([u,d])])],[c]),
              matrix([a],[matrix([a,bra([u,d])])],[c]))
(%i47) braket(ket([a1,b1,c1]),ket([a2,b2,c2]))
(%o47) kron_delta(a1,a2)*kron_delta(b1,b2)*kron_delta(c1,c2)
(%i48) declare([a,b,c],complex)
(%o48) done
(%i49) norm(mket([a,b,c]))
(%o49) norm(matrix([a],[matrix([a,bra([u,d])])],[c]))
(%i50) declare([a,b,c,d],complex)
(%o50) done
(%i51) A:braket(mket([a,b]),mket([c,d]))
(%o51) braket(matrix([a],[matrix([a,bra([u,d])])]),matrix([c],[d]))
(%i52) P:magsqr(A)
(%o52) braket(matrix([a],[matrix([a,bra([u,d])])]),matrix([c],[d]))
 *conjugate(braket(matrix([a],[matrix([a,bra([u,d])])]),matrix([c],[d])))
(%i53) zp
(%o53) matrix([1],[0])
(%i54) zm
(%o54) matrix([0],[1])
(%i55) yp
(%o55) matrix([1/sqrt(2)],[%i/sqrt(2)])
(%i56) ym
(%o56) matrix([1/sqrt(2)],[-(%i/sqrt(2))])
(%i57) braket(xp,zp)
(%o57) 1/sqrt(2)
(%i58) declare([a,b],complex)
(%o58) done
(%i59) psi:mket([a,b])
(%o59) matrix([a],[matrix([a,bra([u,d])])])
(%i60) psi_x:'xp*braket(xp,psi)+'xm*braket(xm,psi)
(%o60) braket(matrix([1/sqrt(2)],[1/sqrt(2)]),matrix([a],
                                                     [
                                                      matrix(
                                                       [a,bra([u,d])])]))
 *xp
 +braket(matrix([1/sqrt(2)],[-(1/sqrt(2))]),
         matrix([a],[matrix([a,bra([u,d])])]))
  *xm
(%i61) sigmay
(%o61) matrix([0,-%i],[%i,0])
(%i62) Sy
(%o62) matrix([0,-((%i*hbar)/2)],[(%i*hbar)/2,0])
(%i63) commutator(Sx,Sy)
(%o63) matrix([(%i*hbar^2)/2,0],[0,-((%i*hbar^2)/2)])
(%i64) (1/2)*anticommutator(sigmax,sigmax)
(%o64) matrix([1,0],[0,1])
(%i65) SY(1/2)
(%o65) matrix([0,-((%i*hbar)/2)],[(%i*hbar)/2,0])
(%i66) SX(1)
(%o66) matrix([0,hbar/sqrt(2),0],[hbar/sqrt(2),0,hbar/sqrt(2)],[0,
                                                                hbar/sqrt(2),
                                                                0])
(%i67) ev(expect(Sy,xp+ym),ratsimp)
(%o67) -hbar
(%i68) ev(qm_variance(Sy,xp+ym),ratsimp)
(%o68) (%i*hbar)/2
(%i69) spin_mket(3/2,1/2,2)
(%o69) matrix([sqrt(3)/2^(3/2)],[%i/2^(3/2)],[1/2^(3/2)],[
                                                          (sqrt(3)*%i)
                                                           /2^(3/2)])
(%i70) spin_mbra(1,1,1)
(%o70) matrix([1/2,1/sqrt(2),1/2])
(%i71) bra([3/2,1/2])
(%o71) bra([3/2,1/2])
(%i72) ket([3/2,1/2])
(%o72) ket([3/2,1/2])
(%i73) jmketp(ket([j,m]))
(%o73) false
(%i74) jmketp(ket([3/2,1/2]))
(%o74) true
(%i75) jmcheck(3/2,1/2)
(%o75) true
(%i76) k:ket([j,m])
(%o76) ket([j,m])
(%i77) JP(k)
(%o77) hbar*ket([j,m+1])*sqrt(j*(j+1)-m*(m+1))
(%i78) JM(k)
(%o78) hbar*ket([j,m-1])*sqrt(j*(j+1)-(m-1)*m)
(%i79) Jsqr(k)
(%o79) hbar^2*j*(j+1)*ket([j,m])
(%i80) Jz(k)
(%o80) hbar*ket([j,m])*m
(%i81) tpket(ket([3/2,1/2]),ket([1/2,1/2]))
(%o81) [tpket,1,ket([3/2,1/2]),ket([1/2,1/2])]
(%i82) tpbra(bra([3/2,1/2]),bra([1/2,1/2]))
(%o82) [tpbra,1,bra([3/2,1/2]),bra([1/2,1/2])]
(%i83) k:tpket(ket([3/2,3/2]),ket([1/2,1/2]))
(%o83) [tpket,1,ket([3/2,3/2]),ket([1/2,1/2])]
(%i84) J1z(k)
(%o84) [tpket,(3*hbar)/2,ket([3/2,3/2]),ket([1/2,1/2])]
(%i85) J2z(k)
(%o85) [tpket,hbar/2,ket([3/2,3/2]),ket([1/2,1/2])]
(%i86) k:tpket(ket([3/2,3/2]),ket([1/2,1/2]))
(%o86) [tpket,1,ket([3/2,3/2]),ket([1/2,1/2])]
(%i87) Jtz(k)
(%o87) [tpket,2*hbar,ket([3/2,3/2]),ket([1/2,1/2])]
(%i88) k:tpket(ket([3/2,1/2]),ket([1/2,1/2]))
(%o88) [tpket,1,ket([3/2,1/2]),ket([1/2,1/2])]
(%i89) b:dagger(k)
(%o89) [tpbra,1,bra([3/2,1/2]),bra([1/2,1/2])]
(%i90) J1p2m(k)
(%o90) [tpket,sqrt(3)*hbar^2,ket([3/2,3/2]),ket([1/2,-(1/2)])]
(%i91) J1m2p(k)
(%o91) 0
(%i92) k:tpket(ket([3/2,-1/2]),ket([1/2,1/2]))
(%o92) [tpket,1,ket([3/2,-(1/2)]),ket([1/2,1/2])]
(%i93) J1zJ2z(k)
(%o93) [tpket,-(hbar^2/4),ket([3/2,-(1/2)]),ket([1/2,1/2])]
(%i94) Jtsqr(k)
(%o94) [tpket,4*hbar^2,ket([3/2,-(1/2)]),ket([1/2,1/2])]
 +[tpket,2*hbar^2,ket([3/2,1/2]),ket([1/2,-(1/2)])]
(%i95) SP(1)
(%o95) matrix([0,sqrt(2)*hbar,0],[0,0,sqrt(2)*hbar],[0,0,0])
(%i96) SM(1)
(%o96) matrix([0,0,0],[sqrt(2)*hbar,0,0],[0,sqrt(2)*hbar,0])
(%i97) RY(1,t)
Proviso: assuming 4*t # 0 
(%o97) matrix([(cos(t)+1)/2,-(sin(t)/sqrt(2)),(1-cos(t))/2],
              [sin(t)/sqrt(2),cos(t),-(sin(t)/sqrt(2))],
              [(1-cos(t))/2,sin(t)/sqrt(2),(cos(t)+1)/2])
(%i98) UU(w*Sy,t)
Proviso: assuming 64*t*w # 0 
(%o98) matrix([cos((t*w)/2),-sin((t*w)/2)],[sin((t*w)/2),cos((t*w)/2)])
(%i99) K:ket([a1,b1])
(%o99) ket([a1,b1])
(%i100) B:bra([a2,b2])
(%o100) bra([a2,b2])
(%i101) braket(B,K)
(%o101) kron_delta(a1,a2)*kron_delta(b1,b2)
(%i102) bra([a1,Id,c1]) . ket([a2,b2,c2])
(%o102) ket(["-",b2,"-"])*kron_delta(a1,a2)*kron_delta(c1,c2)
(%i103) bra([a1,b1,c1]) . ket([Id,b2,c2])
(%o103) bra([a1,"-","-"])*kron_delta(b1,b2)*kron_delta(c1,c2)
(%i104) bell:(1/sqrt(2))*(ket([u,d])-ket([d,u]))
(%o104) (ket([u,d])-ket([d,u]))/sqrt(2)
(%i105) rho:bell . dagger(bell)
(%o105) (ket([u,d]) . bra([u,d])-ket([u,d]) . bra([d,u])
                                -ket([d,u]) . bra([u,d])
                                +ket([d,u]) . bra([d,u]))
 /2
(%i106) assume(notequal(u,d))
(%o106) [notequal(u,d)]
(%i107) trace1:bra([u,Id]) . rho . ket([u,Id])+bra([d,Id]) . rho . ket([d,Id])
(%o107) ket(["-",u]) . bra(["-",u])/2+ket(["-",d]) . bra(["-",d])/2
(%i108) declare(n,integer,n,scalar)
(%o108) done
(%i109) ap . ket([n])
(%o109) sqrt(n+1)*ket([n+1])
(%i110) am . ket([n])
(%o110) ket([n-1])*sqrt(n)
/home/ehm/math/Maxima/share/ehm/qm-maxima/docs/examples.txt:110:23:incorrect syntax: ket is not an infix operator
[n]).(ap+am)^^4.ket(
                  ^
(%o112) "/home/ehm/math/Maxima/share/ehm/qm-maxima/docs/examples.txt"
