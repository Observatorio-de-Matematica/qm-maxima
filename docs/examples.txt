display2d:false$
load(qm)$
ket(a,b)+ket(c,d);
ket([a,b,c])+ket([d,e,f]);
braket(bra(a1,b1),ket(a2,b2));
tpket('zp,'zm)+tpket('zm,'zp);
tpket([zp,zm]);
declare([a,b],complex);
psi:a*ket(1)+b*ket(2);
psidag:dagger(psi);
psidag.psi;
declare([c1,c2],complex,r,real);
k:ket([c1,c2,r]);
b:dagger(k);
b.k;
kill(a);
ket(a);
declare([c1,c2],complex);
ket([c1,c2]);
facts();
kill(c1,c2);
bra(c1,c2);
bra([c1,c2]);
facts();
kill(a,b,k);
k:ket(a,b);
ketp(k);
k:ket([a,b]);
ketp(k);
b:bra([a,b]);
brap(b);
autoket([a,b]);
facts();
autoket([a*sin(x),b*sin(x)]);
facts();
autobra([a,b]);
facts();
autobra([a*sin(x),b]);
facts();
dagger(bra([%i,2]));
declare([a,b,c],complex);
braket(ket([a,b,c]),ket([a,b,c]));
declare([a,b,c],complex);
norm(ket([a,b,c]));
norm(ket(a,b,c));
declare([a,b,c,d],complex);
A:braket(ket([a,b]),ket([c,d]));
P:magsqr(A);
ket(a)+ket(b);
braket(bra(a),ket(b));
braket(bra(a)+bra(c),ket(b));
zp;
zm;
yp;
ym;
braket(xp,zp);
declare([a,b],complex);
psi:ket([a,b]);
psi_x:'xp*braket(xp,psi)+'xm*braket(xm,psi);
sigmay;
Sy;
commutator(Sx,Sy);
SY(1/2);
SX(1);
ev(expect(Sy,xp+ym),ratsimp);
ev(qm_variance(Sy,xp+ym),ratsimp);
jmbra(3/2,1/2);
jmbra([3/2,1/2]);
jmketp(jmket(j,m));
jmketp(jmket([j,m]));
jmcheck(3/2,1/2);
K:jmket(j1,m1);
B:jmbra(j2,m2);
jmbraket(B,K);
B:jmbra(j1,m1);
jmbraket(B,K);
K:jmket([3/2,1/2]);
B:jmbra([3/2,1/2]);
jmbraket(B,K);
jmbraket(jmbra(j1,m1),jmket(j2,m2));
k:jmket([j,m]);
JP(k);
JM(k);
Jsqr(k);
Jz(k);
SP(1);
SM(1);
RZ(1/2,t);
UU(w*Sy,t);
K:tpket(a1,b1);
B:tpbra(a2,b2);
tpbraket(B,K);
kill(a,b,c,d);
declare([a,b,c,d],complex);
tpbra([bra([a,b]),bra([c,d])]);
tpbra([dagger(zp),bra([c,d])]);
K:tpket([zp,zm]);
zpb:dagger(zp);
zmb:dagger(zm);
B:tpbra([zpb,zmb]);
tpbraket(K,B);
tpbraket(B,K);
