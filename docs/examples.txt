display2d:false$
load(qm)$
ket(a,b)+ket(c,d);
ket([a,b])+ket([c,d]);
ketprod('zp,'zm)+ketprod('zm,'zp);
ketprod([zp,zm]);
kill(a);
ket(a);
declare([c1,c2],complex);
ket([c1,c2]);
facts();
kill(c1,c2);
bra(c1,c2);
bra([c1,c2]);
facts();
kill(a,b,k);
k:ket(a,b);
ketp(k);
k:ket([a,b]);
ketp(k);
b:bra([a,b]);
brap(b);
dagger(bra([%i,2]));
declare([a,b,c],complex);
braket(ket([a,b,c]),ket([a,b,c]));
declare([a,b,c],complex);
norm(ket([a,b,c]));
norm(ket(a,b,c));
declare([a,b,c,d],complex);
A:braket(ket([a,b]),ket([c,d]));
P:magsqr(A);
zp;
zm;
yp;
ym;
braket(xp,zp);
declare([a,b],complex);
psi:ket([a,b]);
psi_x:'xp*braket(xp,psi)+'xm*braket(xm,psi);
sigmay;
Sy;
commutator(Sx,Sy);
SY(1/2);
SX(1);
ev(expect(Sy,xp+ym),ratsimp);
ev(qm_variance(Sy,xp+ym),ratsimp);
jm_bra(3/2,1/2);
K:jm_ket(j1,m1);
B:jm_bra(j2,m2);
jm_braket(B,K);
B:jm_bra(j1,m1);
jm_braket(B,K);
k:jm_ket(j,m);
JP(k);
JM(k);
Jsqr(k);
Jz(k);
SP(1);
SM(1);
RZ(1/2,t);
UU(w*Sy,t);
ketprod(zp,zm);
ketprod('zp,'zm);
kill(a,b,c,d);
declare([a,b,c,d],complex);
braprod(bra([a,b]),bra([c,d]));
braprod(dagger(zp),bra([c,d]));
K:ketprod(zp,zm);
zpb:dagger(zp);
zmb:dagger(zm);
B:braprod(zpb,zmb);
braketprod(K,B);
braketprod(B,K);
