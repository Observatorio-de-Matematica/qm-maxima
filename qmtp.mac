
/* experimental support for general tensor product states up to 3 kets*/

matchdeclare([a1,a2,a3,a4,a5,a6],all);
matchdeclare([b1,b2,b3,b4,b5,b6],all);

/* double-product states */
/* If there is an Id operator */
tellsimpafter( bra(1,a2) . ket(b1,b2) , ket(b1,"-")*kron_delta(a2,b2) );
tellsimpafter( bra(a1,1) . ket(b1,b2) , ket("-",b2)*kron_delta(a1,b1) );
tellsimpafter( bra(a1,a2) . ket(1,b2) , bra(a1,"-")*kron_delta(a2,b2) );
tellsimpafter( bra(a1,a2) . ket(b1,1) , bra("-",a2)*kron_delta(a1,b1) );
/* most general form if no Id operator */
/* tellsimpafter( bra(a1,a2) . ket(b1,b2) , kron_delta(a1,b1)*kron_delta(a2,b2) ); */

/* triple-product states */
/* If there is a single Id operator */
tellsimpafter( bra(1,a2,a3) . ket(b1,b2,b3) , ket(b1,"-","-")*kron_delta(a2,b2)*kron_delta(a3,b3) );
tellsimpafter( bra(a1,1,a3) . ket(b1,b2,b3) , ket("-",b2,"-")*kron_delta(a1,b1)*kron_delta(a3,b3) );
tellsimpafter( bra(a1,a2,1) . ket(b1,b2,b3) , ket("-","-",b3)*kron_delta(a1,b1)*kron_delta(a2,b2) );
tellsimpafter( bra(a1,a2,a3) . ket(1,b2,b3) , bra(a1,"-","-")*kron_delta(a2,b2)*kron_delta(a3,b3) );
tellsimpafter( bra(a1,a2,a3) . ket(b1,1,b3) , bra("-",a2,"-")*kron_delta(a1,b1)*kron_delta(a3,b3) );
tellsimpafter( bra(a1,a2,a3) . ket(b1,b2,1) , bra("-","-",a3)*kron_delta(a1,b1)*kron_delta(a2,b2) );
/* If there are two Id operators */
tellsimpafter( bra(1,1,a3) . ket(b1,b2,b3) , ket(b1,b2,"-")*kron_delta(a3,b3) );
tellsimpafter( bra(1,a2,1) . ket(b1,b2,b3) , ket(b1,"-",b3)*kron_delta(a2,b2) );
tellsimpafter( bra(a1,1,1) . ket(b1,b2,b3) , ket("-",b2,b3)*kron_delta(a1,b1) );
tellsimpafter( bra(a1,a2,a3) . ket(1,1,b3) , bra(a1,a2,"-")*kron_delta(a3,b3) );
tellsimpafter( bra(a1,a2,a3) . ket(1,b2,1) , bra(a1,"-",a3)*kron_delta(a2,b2) );
tellsimpafter( bra(a1,a2,a3) . ket(b1,1,1) , bra("-",a2,a3)*kron_delta(a1,b1) );
/* most general form if no Id operator */
tellsimpafter( bra(a1,a2,a3) . ket(b1,b2,3) , kron_delta(a1,b1)*kron_delta(a2,b2)*kron_delta(a3,b3) );
